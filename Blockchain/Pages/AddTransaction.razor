@page "/addtransaction"
@inject DialogService DialogService
@inject NotificationService NotificationService
@inject IApiService ApiService
@using Services
@using Data
@using Newtonsoft.Json;
@using System.Text;


<RadzenText TextStyle="TextStyle.H3">Add transaction</RadzenText>
<hr /> 

<RadzenRow >
    <RadzenColumn SizeLG="12" SizeMD="12" SizeSM="12" Size=" 12">
        <RadzenTextArea Rows="18" class="form-control" @bind-Value="fileContent" />
    </RadzenColumn>
</RadzenRow>
<RadzenRow class="rz-mt-3 ">
    <RadzenColumn SizeLG="12" SizeMD="12" SizeSM="12" Size=" 12">
        <RadzenButton Text="Add" Style="float:inline-end" class=" rz-background-color-info-light rz-ml-1" Click="AddTran" />
        <RadzenButton Icon="note_add" Text="File" Style="float:inline-end" class=" rz-background-color-info-darker" Click=ShowInlineDialog />
    </RadzenColumn>
</RadzenRow>

@code {
     
    //Modal
    async Task ShowInlineDialog()
    {
    var result = await DialogService.OpenAsync("Upload File", ds =>
    @<RadzenStack Gap="1.5rem">
        <InputFile OnChange="@HandleFileSelected" class="form-control" accept=".txt, .json" />
        <RadzenStack Orientation="Orientation.Horizontal" Gap="0.5rem" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
            <RadzenStack Orientation="Orientation.Horizontal">
                <RadzenButton Text="Cancel" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Light" />
            </RadzenStack>
            <RadzenButton Text="Add" Click="HandleSubmit" Style="width: 80px;" />
        </RadzenStack>
    </RadzenStack>
        );
    }


    private IBrowserFile selectedFile;
    private string fileContent ="";

    private void HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
    }

    private async Task HandleSubmit()
    {
        if (selectedFile != null)
        {
            if (selectedFile.ContentType == "text/plain" || selectedFile.ContentType == "application/json")
            {
                 
                 using (var stream = selectedFile.OpenReadStream())
                 using (var reader = new StreamReader(stream))
                 {
                     fileContent = await reader.ReadToEndAsync();
                 }                      
                    
                        
            }
            else
            {
                NotificationService.Notify(NotificationSeverity.Error, "Hãy chọn file .json hoặc .txt");
            }
            selectedFile = null;
            DialogService.Close(true);
        }
        else
        {
            NotificationService.Notify(NotificationSeverity.Error, "Hãy chọn file");

        }
    }


    private ResponseApi<string> responseAddTran;
    private async Task AddTran()
    {
        if (!string.IsNullOrEmpty(fileContent))
        {
             responseAddTran = await ApiService.AddTran(fileContent);
             if (responseAddTran.code == "200")
             {
                 NotificationService.Notify(NotificationSeverity.Success, responseAddTran.message);
             }
             else
             {
                 NotificationService.Notify(NotificationSeverity.Error, responseAddTran.message);
             }
         }
         else
         {
             NotificationService.Notify(NotificationSeverity.Error, "Hãy nhập transaction");
         }
         fileContent = "";
    }


}

